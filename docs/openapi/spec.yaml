openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
security:
- bearerAuth: []
paths:
  /weight-tickets/{weightTicketId}:
    get:
      tags:
      - weight-ticket-controller
      operationId: getWeightTicketByNumber
      parameters:
      - name: weightTicketId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/WeightTicketDetailView"
    put:
      tags:
      - weight-ticket-controller
      operationId: update
      parameters:
      - name: weightTicketId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeightTicketRequest"
        required: true
      responses:
        "204":
          description: No Content
  /waste-streams/{wasteStreamNumber}:
    get:
      tags:
      - waste-stream-controller
      operationId: getWasteStreamByNumber
      parameters:
      - name: wasteStreamNumber
        in: path
        required: true
        schema:
          type: string
          pattern: "^[0-9]{12}$"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/WasteStreamDetailView"
    put:
      tags:
      - waste-stream-controller
      operationId: update_1
      parameters:
      - name: wasteStreamNumber
        in: path
        required: true
        schema:
          type: string
          pattern: "^[0-9]{12}$"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WasteStreamRequest"
        required: true
      responses:
        "204":
          description: No Content
    delete:
      tags:
      - waste-stream-controller
      operationId: delete
      parameters:
      - name: wasteStreamNumber
        in: path
        required: true
        schema:
          type: string
          pattern: "^[0-9]{12}$"
      responses:
        "204":
          description: No Content
  /users/{id}:
    get:
      tags:
      - user-controller
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
    put:
      tags:
      - user-controller
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
        required: true
      responses:
        "200":
          description: OK
    delete:
      tags:
      - user-controller
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /users/{id}/profile:
    put:
      tags:
      - user-controller
      operationId: updateProfile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
        required: true
      responses:
        "200":
          description: OK
  /trucks/{licensePlate}:
    get:
      tags:
      - truck-controller
      operationId: getTruckByLicensePlate
      parameters:
      - name: licensePlate
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Truck"
    put:
      tags:
      - truck-controller
      operationId: updateTruck
      parameters:
      - name: licensePlate
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Truck"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Truck"
    delete:
      tags:
      - truck-controller
      operationId: deleteTruck
      parameters:
      - name: licensePlate
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /transport/waste/{id}:
    put:
      tags:
      - waste-transport-controller
      operationId: updateWasteTransport
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WasteTransportRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UpdateWasteTransportResponse"
  /transport/container/{id}:
    put:
      tags:
      - container-transport-controller
      operationId: updateContainerTransport
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContainerTransportRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UpdateContainerTransportResponse"
  /processing-methods/{code}:
    put:
      tags:
      - processing-method-controller
      operationId: updateProcessingMethod
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessingMethodDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - processing-method-controller
      operationId: deleteProcessingMethod
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /planning/reorder:
    put:
      tags:
      - planning-controller
      operationId: reorderTransports
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransportReorderRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PlanningView"
  /eural/{code}:
    put:
      tags:
      - eural-controller
      operationId: updateEural
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Eural"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Eural"
    delete:
      tags:
      - eural-controller
      operationId: deleteEural
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /containers/{id}:
    get:
      tags:
      - waste-container-controller
      operationId: getContainerById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/WasteContainerView"
    put:
      tags:
      - waste-container-controller
      operationId: updateContainer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WasteContainerRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/WasteContainerView"
    delete:
      tags:
      - waste-container-controller
      operationId: deleteContainer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: No Content
  /companies/{id}:
    get:
      tags:
      - company-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CompanyDto"
    put:
      tags:
      - company-controller
      operationId: updateCompany
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CompanyDto"
    delete:
      tags:
      - company-controller
      operationId: deleteCompany
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /companies/{companyId}/branches/{branchId}:
    put:
      tags:
      - company-controller
      operationId: updateBranch
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: branchId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddressRequest"
        required: true
      responses:
        "204":
          description: No Content
    delete:
      tags:
      - company-controller
      operationId: deleteBranch
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: branchId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: No Content
  /weight-tickets:
    get:
      tags:
      - weight-ticket-controller
      operationId: getWeightTickets
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WeightTicketListView"
    post:
      tags:
      - weight-ticket-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WeightTicketRequest"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CreateWeightTicketResponse"
  /weight-tickets/{weightTicketId}/cancel:
    post:
      tags:
      - weight-ticket-controller
      operationId: cancel
      parameters:
      - name: weightTicketId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelWeightTicketRequest"
        required: true
      responses:
        "204":
          description: No Content
  /waste-streams:
    get:
      tags:
      - waste-stream-controller
      operationId: getWasteStreams
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WasteStreamListView"
    post:
      tags:
      - waste-stream-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WasteStreamRequest"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CreateWasteStreamResponse"
  /users:
    get:
      tags:
      - user-controller
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserResponse"
    post:
      tags:
      - user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
        required: true
      responses:
        "200":
          description: OK
  /trucks:
    get:
      tags:
      - truck-controller
      operationId: getAllTrucks
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Truck"
    post:
      tags:
      - truck-controller
      operationId: createTruck
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Truck"
        required: true
      responses:
        "201":
          description: Created
  /transport/{id}/waybill/signature:
    post:
      tags:
      - signature-controller
      operationId: saveSignature
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSignatureRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SignatureStatusView"
  /transport/{id}/finished:
    post:
      tags:
      - transport-controller
      operationId: markTransportAsFinished
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransportFinishedRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TransportDto"
  /transport/waste:
    post:
      tags:
      - waste-transport-controller
      operationId: createWasteTransport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WasteTransportRequest"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CreateWasteTransportResponse"
  /transport/container:
    post:
      tags:
      - container-transport-controller
      operationId: createContainerTransport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContainerTransportRequest"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CreateContainerTransportResponse"
  /processing-methods:
    get:
      tags:
      - processing-method-controller
      operationId: getProcessingMethods
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProcessingMethodDto"
    post:
      tags:
      - processing-method-controller
      operationId: createProcessingMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessingMethodDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProcessingMethodDto"
  /eural:
    get:
      tags:
      - eural-controller
      operationId: getEural
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Eural"
    post:
      tags:
      - eural-controller
      operationId: createEural
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Eural"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Eural"
  /containers:
    get:
      tags:
      - waste-container-controller
      operationId: getAllContainers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WasteContainerView"
    post:
      tags:
      - waste-container-controller
      operationId: createContainer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateContainerRequest"
        required: true
      responses:
        "201":
          description: Created
  /companies:
    get:
      tags:
      - company-controller
      operationId: getCompanies
      parameters:
      - name: includeBranches
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompanyResponse"
    post:
      tags:
      - company-controller
      operationId: createCompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyRequest"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CompanyDto"
  /companies/{id}/branches:
    post:
      tags:
      - company-controller
      operationId: createBranch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddressRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProjectLocationResult"
  /users/drivers:
    get:
      tags:
      - driver-controller
      operationId: getAllDrivers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserResponse"
  /transport:
    get:
      tags:
      - transport-controller
      operationId: getAllTransports
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransportDto"
  /transport/{id}:
    get:
      tags:
      - transport-controller
      operationId: getTransportById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TransportDetailView"
    delete:
      tags:
      - transport-controller
      operationId: deleteTransport
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: No Content
  /transport/{id}/waybill/signature-status:
    get:
      tags:
      - signature-controller
      operationId: getSignatureStatuses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SignatureStatusView"
  /planning/{pickupDate}:
    get:
      tags:
      - planning-controller
      operationId: getPlanningByDate
      parameters:
      - name: pickupDate
        in: path
        required: true
        schema:
          type: string
          format: date
      - name: truckId
        in: query
        required: false
        schema:
          type: string
      - name: driverId
        in: query
        required: false
        schema:
          type: string
          format: uuid
      - name: status
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PlanningView"
  /planning/driver/{driverId}:
    get:
      tags:
      - planning-controller
      operationId: getPlanningByDriver
      parameters:
      - name: driverId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      $ref: "#/components/schemas/DriverPlanningItem"
components:
  schemas:
    CompanyConsignor:
      allOf:
      - $ref: "#/components/schemas/ConsignorRequest"
      - type: object
        properties:
          companyId:
            type: string
            format: uuid
      required:
      - companyId
    ConsignorRequest:
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
      required:
      - type
    PersonConsignor:
      allOf:
      - $ref: "#/components/schemas/ConsignorRequest"
    WeightRequest:
      type: object
      properties:
        value:
          type: string
        unit:
          type: string
          enum:
          - KG
      required:
      - unit
      - value
    WeightTicketLineRequest:
      type: object
      properties:
        wasteStreamNumber:
          type: string
        weight:
          $ref: "#/components/schemas/WeightRequest"
      required:
      - wasteStreamNumber
      - weight
    WeightTicketRequest:
      type: object
      properties:
        consignorParty:
          oneOf:
          - $ref: "#/components/schemas/CompanyConsignor"
          - $ref: "#/components/schemas/PersonConsignor"
        lines:
          type: array
          items:
            $ref: "#/components/schemas/WeightTicketLineRequest"
        carrierParty:
          type: string
          format: uuid
        truckLicensePlate:
          type: string
        reclamation:
          type: string
        note:
          type: string
      required:
      - consignorParty
      - lines
    DutchAddressRequest:
      allOf:
      - $ref: "#/components/schemas/PickupLocationRequest"
      - type: object
        properties:
          streetName:
            type: string
            minLength: 1
          buildingNumber:
            type: string
            minLength: 1
          buildingNumberAddition:
            type: string
          postalCode:
            type: string
            minLength: 1
            pattern: "^[1-9][0-9]{3}\\s?[A-Za-z]{2}$"
          city:
            type: string
            minLength: 1
          country:
            type: string
            minLength: 1
      required:
      - buildingNumber
      - city
      - country
      - postalCode
      - streetName
    NoPickupLocationRequest:
      allOf:
      - $ref: "#/components/schemas/PickupLocationRequest"
    PickupCompanyRequest:
      allOf:
      - $ref: "#/components/schemas/PickupLocationRequest"
      - type: object
        properties:
          companyId:
            type: string
            format: uuid
      required:
      - companyId
    PickupLocationRequest:
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
      required:
      - type
    ProjectLocationRequest:
      allOf:
      - $ref: "#/components/schemas/PickupLocationRequest"
      - type: object
        properties:
          id:
            type: string
            format: uuid
            minLength: 1
          companyId:
            type: string
            format: uuid
          streetName:
            type: string
            minLength: 1
          buildingNumber:
            type: string
            minLength: 1
          buildingNumberAddition:
            type: string
          postalCode:
            type: string
            minLength: 1
            pattern: "^[1-9][0-9]{3}\\s?[A-Za-z]{2}$"
          city:
            type: string
            minLength: 1
          country:
            type: string
            minLength: 1
      required:
      - buildingNumber
      - city
      - companyId
      - country
      - id
      - postalCode
      - streetName
    ProximityDescriptionRequest:
      allOf:
      - $ref: "#/components/schemas/PickupLocationRequest"
      - type: object
        properties:
          description:
            type: string
            minLength: 1
          postalCodeDigits:
            type: string
            minLength: 1
            pattern: "^[0-9]{4}$"
          city:
            type: string
            minLength: 1
          country:
            type: string
            minLength: 1
      required:
      - city
      - country
      - description
      - postalCodeDigits
    WasteStreamRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        euralCode:
          type: string
          minLength: 1
        processingMethodCode:
          type: string
          minLength: 1
        collectionType:
          type: string
        pickupLocation:
          oneOf:
          - $ref: "#/components/schemas/DutchAddressRequest"
          - $ref: "#/components/schemas/NoPickupLocationRequest"
          - $ref: "#/components/schemas/PickupCompanyRequest"
          - $ref: "#/components/schemas/ProjectLocationRequest"
          - $ref: "#/components/schemas/ProximityDescriptionRequest"
        processorPartyId:
          type: string
          pattern: "^[0-9]{5}$"
        consignorParty:
          oneOf:
          - $ref: "#/components/schemas/CompanyConsignor"
          - $ref: "#/components/schemas/PersonConsignor"
        pickupParty:
          type: string
          format: uuid
        dealerParty:
          type: string
          format: uuid
        collectorParty:
          type: string
          format: uuid
        brokerParty:
          type: string
          format: uuid
      required:
      - collectionType
      - consignorParty
      - euralCode
      - name
      - pickupLocation
      - pickupParty
      - processingMethodCode
      - processorPartyId
    UpdateUserRequest:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roles:
          type: array
          items:
            type: string
      required:
      - email
      - firstName
      - lastName
      - roles
    Truck:
      type: object
      properties:
        licensePlate:
          type: string
        brand:
          type: string
        model:
          type: string
        updatedAt:
          type: string
          format: date-time
        displayName:
          type: string
      required:
      - displayName
      - licensePlate
      - updatedAt
    WasteTransportRequest:
      type: object
      properties:
        pickupDateTime:
          type: string
          format: date-time
        deliveryDateTime:
          type: string
          format: date-time
        containerOperation:
          type: string
          enum:
          - EXCHANGE
          - PICKUP
          - EMPTY
          - DELIVERY
        transportType:
          type: string
          enum:
          - CONTAINER
          - WASTE
        driverId:
          type: string
          format: uuid
        carrierPartyId:
          type: string
          format: uuid
        truckId:
          type: string
        containerId:
          type: string
          format: uuid
        note:
          type: string
        wasteStreamNumber:
          type: string
        weight:
          type: integer
          format: int32
          minimum: 0
        unit:
          type: string
          minLength: 1
        quantity:
          type: integer
          format: int32
          minimum: 0
      required:
      - carrierPartyId
      - containerOperation
      - note
      - pickupDateTime
      - quantity
      - transportType
      - unit
      - weight
    UpdateWasteTransportResponse:
      type: object
      properties:
        transportId:
          type: string
          format: uuid
        status:
          type: string
      required:
      - status
      - transportId
    ContainerTransportRequest:
      type: object
      properties:
        consignorPartyId:
          type: string
          format: uuid
        pickupDateTime:
          type: string
          format: date-time
        deliveryDateTime:
          type: string
          format: date-time
        transportType:
          type: string
          enum:
          - CONTAINER
          - WASTE
        containerOperation:
          type: string
          enum:
          - EXCHANGE
          - PICKUP
          - EMPTY
          - DELIVERY
        driverId:
          type: string
          format: uuid
        carrierPartyId:
          type: string
          format: uuid
        pickupCompanyId:
          type: string
          format: uuid
        pickupProjectLocationId:
          type: string
          format: uuid
        pickupStreet:
          type: string
        pickupBuildingNumber:
          type: string
        pickupBuildingNumberAddition:
          type: string
        pickupPostalCode:
          type: string
        pickupCity:
          type: string
        pickupDescription:
          type: string
        deliveryCompanyId:
          type: string
          format: uuid
        deliveryProjectLocationId:
          type: string
          format: uuid
        deliveryStreet:
          type: string
        deliveryBuildingNumber:
          type: string
        deliveryBuildingNumberAddition:
          type: string
        deliveryPostalCode:
          type: string
        deliveryCity:
          type: string
        deliveryDescription:
          type: string
        truckId:
          type: string
        containerId:
          type: string
          format: uuid
        note:
          type: string
      required:
      - carrierPartyId
      - consignorPartyId
      - containerOperation
      - deliveryBuildingNumber
      - deliveryCity
      - deliveryPostalCode
      - deliveryStreet
      - note
      - pickupDateTime
      - transportType
    UpdateContainerTransportResponse:
      type: object
      properties:
        transportId:
          type: string
          format: uuid
        status:
          type: string
      required:
      - status
      - transportId
    ProcessingMethodDto:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      - description
    TransportReorderRequest:
      type: object
      properties:
        date:
          type: string
          format: date
        licensePlate:
          type: string
        transportIds:
          type: array
          items:
            type: string
            format: uuid
      required:
      - date
      - licensePlate
      - transportIds
    PlanningTransportView:
      type: object
      properties:
        pickupDate:
          type: string
        deliveryDate:
          type: string
        id:
          type: string
        truck:
          $ref: "#/components/schemas/Truck"
        originCity:
          type: string
        destinationCity:
          type: string
        driver:
          $ref: "#/components/schemas/ProfileDto"
        status:
          type: string
          enum:
          - UNPLANNED
          - PLANNED
          - FINISHED
          - INVOICED
        displayNumber:
          type: string
        containerId:
          type: string
        transportType:
          type: string
          enum:
          - CONTAINER
          - WASTE
        sequenceNumber:
          type: integer
          format: int32
      required:
      - id
      - pickupDate
      - sequenceNumber
      - status
      - transportType
    PlanningTransportsView:
      type: object
      properties:
        truck:
          type: string
        transports:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/PlanningTransportView"
      required:
      - transports
      - truck
    PlanningView:
      type: object
      properties:
        dates:
          type: array
          items:
            type: string
        transports:
          type: array
          items:
            $ref: "#/components/schemas/PlanningTransportsView"
      required:
      - dates
      - transports
    ProfileDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        roles:
          type: array
          items:
            $ref: "#/components/schemas/UserRoleDto"
      required:
      - id
      - roles
    UserRoleDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: string
          format: uuid
        role:
          type: string
      required:
      - role
    Eural:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      - description
    AddressDto:
      type: object
      properties:
        streetName:
          type: string
        buildingName:
          type: string
        buildingNumber:
          type: string
        city:
          type: string
        postalCode:
          type: string
        country:
          type: string
      required:
      - buildingNumber
      - postalCode
    ContainerLocation:
      type: object
      properties:
        companyId:
          type: string
          format: uuid
        companyName:
          type: string
        address:
          $ref: "#/components/schemas/AddressDto"
    WasteContainerRequest:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        id:
          type: string
        location:
          $ref: "#/components/schemas/ContainerLocation"
        notes:
          type: string
      required:
      - id
      - uuid
    AddressView:
      type: object
      properties:
        street:
          type: string
        houseNumber:
          type: string
        houseNumberAddition:
          type: string
        postalCode:
          type: string
        city:
          type: string
        country:
          type: string
      required:
      - city
      - country
      - houseNumber
      - postalCode
      - street
    ContainerLocationView:
      type: object
      properties:
        companyId:
          type: string
          format: uuid
        companyName:
          type: string
        addressView:
          $ref: "#/components/schemas/AddressView"
    WasteContainerView:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        id:
          type: string
        location:
          $ref: "#/components/schemas/ContainerLocationView"
        notes:
          type: string
      required:
      - id
      - location
      - uuid
    CompanyDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        chamberOfCommerceId:
          type: string
        vihbId:
          type: string
        processorId:
          type: string
        name:
          type: string
        address:
          $ref: "#/components/schemas/AddressDto"
        updatedAt:
          type: string
          format: date-time
      required:
      - address
      - name
      - updatedAt
    AddressRequest:
      type: object
      properties:
        streetName:
          type: string
          minLength: 1
        buildingNumberAddition:
          type: string
        buildingNumber:
          type: string
          minLength: 1
        postalCode:
          type: string
          pattern: "^\\d{4}\\s[A-Z]{2}$"
        city:
          type: string
          minLength: 1
        country:
          type: string
          minLength: 1
      required:
      - buildingNumber
      - city
      - country
      - postalCode
      - streetName
    CreateWeightTicketResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
      required:
      - id
    CancelWeightTicketRequest:
      type: object
      properties:
        cancellationReason:
          type: string
          minLength: 1
      required:
      - cancellationReason
    CreateWasteStreamResponse:
      type: object
      properties:
        wasteStreamNumber:
          type: string
      required:
      - wasteStreamNumber
    CreateUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^a-zA-Z0-9]).{8,}$"
        firstName:
          type: string
          minLength: 1
        lastName:
          type: string
          minLength: 1
        roles:
          type: array
          items:
            type: string
          minItems: 1
      required:
      - email
      - firstName
      - lastName
      - password
      - roles
    CreateSignatureRequest:
      type: object
      properties:
        signature:
          type: string
        email:
          type: string
          format: email
        party:
          type: string
          minLength: 1
      required:
      - email
      - party
      - signature
    SignatureStatusView:
      type: object
      properties:
        transportId:
          type: string
          format: uuid
        consignorSigned:
          type: boolean
        carrierSigned:
          type: boolean
        consigneeSigned:
          type: boolean
        pickupSigned:
          type: boolean
      required:
      - carrierSigned
      - consigneeSigned
      - consignorSigned
      - pickupSigned
      - transportId
    TransportFinishedRequest:
      type: object
      properties:
        hours:
          type: number
          format: double
      required:
      - hours
    GoodsItemDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        wasteStreamNumber:
          type: string
        netNetWeight:
          type: integer
          format: int32
        unit:
          type: string
        quantity:
          type: integer
          format: int32
      required:
      - netNetWeight
      - quantity
      - unit
      - wasteStreamNumber
    PickupLocationDto:
      type: object
      properties:
        id:
          type: string
      required:
      - id
    TransportDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayNumber:
          type: string
        consignorParty:
          $ref: "#/components/schemas/CompanyDto"
        carrierParty:
          $ref: "#/components/schemas/CompanyDto"
        pickupLocation:
          $ref: "#/components/schemas/PickupLocationDto"
        pickupDateTime:
          type: string
          format: date-time
        deliveryLocation:
          $ref: "#/components/schemas/PickupLocationDto"
        deliveryDateTime:
          type: string
          format: date-time
        transportType:
          type: string
          enum:
          - CONTAINER
          - WASTE
        containerOperation:
          type: string
          enum:
          - EXCHANGE
          - PICKUP
          - EMPTY
          - DELIVERY
        wasteContainer:
          $ref: "#/components/schemas/WasteContainerDto"
        truck:
          $ref: "#/components/schemas/Truck"
        driver:
          $ref: "#/components/schemas/ProfileDto"
        note:
          type: string
        goodsItem:
          $ref: "#/components/schemas/GoodsItemDto"
        transportHours:
          type: number
          format: double
        updatedAt:
          type: string
          format: date-time
        sequenceNumber:
          type: integer
          format: int32
        status:
          type: string
          enum:
          - UNPLANNED
          - PLANNED
          - FINISHED
          - INVOICED
      required:
      - carrierParty
      - consignorParty
      - deliveryLocation
      - id
      - note
      - pickupDateTime
      - pickupLocation
      - sequenceNumber
      - status
      - transportType
    WasteContainerDto:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        id:
          type: string
        company:
          $ref: "#/components/schemas/CompanyDto"
        address:
          $ref: "#/components/schemas/AddressDto"
        notes:
          type: string
      required:
      - id
    CreateWasteTransportResponse:
      type: object
      properties:
        transportId:
          type: string
          format: uuid
      required:
      - transportId
    CreateContainerTransportResponse:
      type: object
      properties:
        transportId:
          type: string
          format: uuid
      required:
      - transportId
    CreateContainerRequest:
      type: object
      properties:
        id:
          type: string
        location:
          $ref: "#/components/schemas/ContainerLocation"
        notes:
          type: string
      required:
      - id
    CompanyRequest:
      type: object
      properties:
        chamberOfCommerceId:
          type: string
          pattern: "^$|^[\\d]{8}$"
        vihbId:
          type: string
          pattern: "^$|^[0-9]{6}[VIHBX]{4}$"
        name:
          type: string
          minLength: 1
        address:
          $ref: "#/components/schemas/AddressRequest"
      required:
      - address
      - name
    ProjectLocationResult:
      type: object
      properties:
        companyId:
          type: string
          format: uuid
        projectLocationId:
          type: string
          format: uuid
      required:
      - companyId
      - projectLocationId
    WeightTicketListView:
      type: object
      properties:
        id:
          type: integer
          format: int64
        consignorPartyName:
          type: string
        note:
          type: string
        status:
          type: string
          enum:
          - DRAFT
          - COMPLETED
          - INVOICED
          - CANCELLED
      required:
      - consignorPartyName
      - id
      - status
    CompanyConsignorView:
      allOf:
      - $ref: "#/components/schemas/ConsignorView"
      - type: object
        properties:
          company:
            $ref: "#/components/schemas/CompanyView"
      required:
      - company
    CompanyView:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        chamberOfCommerceId:
          type: string
        vihbId:
          type: string
        processorId:
          type: string
        address:
          $ref: "#/components/schemas/AddressView"
      required:
      - address
      - id
      - name
    ConsignorView:
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
      required:
      - type
    LocalDate:
      type: object
      properties:
        value:
          type: string
          format: date
          writeOnly: true
        year:
          type: integer
          format: int32
        dayOfMonth:
          type: integer
          format: int32
        month:
          type: string
          enum:
          - JANUARY
          - FEBRUARY
          - MARCH
          - APRIL
          - MAY
          - JUNE
          - JULY
          - AUGUST
          - SEPTEMBER
          - OCTOBER
          - NOVEMBER
          - DECEMBER
        dayOfWeek:
          type: string
          enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
        dayOfYear:
          type: integer
          format: int32
        value$kotlinx_datetime:
          type: string
          format: date
        monthNumber:
          type: integer
          format: int32
      required:
      - dayOfMonth
      - dayOfWeek
      - dayOfYear
      - month
      - monthNumber
      - value$kotlinx_datetime
      - year
    LocalDateTime:
      type: object
      properties:
        value:
          type: string
          format: date-time
          writeOnly: true
        time:
          $ref: "#/components/schemas/LocalTime"
        year:
          type: integer
          format: int32
        dayOfMonth:
          type: integer
          format: int32
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        month:
          type: string
          enum:
          - JANUARY
          - FEBRUARY
          - MARCH
          - APRIL
          - MAY
          - JUNE
          - JULY
          - AUGUST
          - SEPTEMBER
          - OCTOBER
          - NOVEMBER
          - DECEMBER
        dayOfWeek:
          type: string
          enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
        dayOfYear:
          type: integer
          format: int32
        date:
          $ref: "#/components/schemas/LocalDate"
        value$kotlinx_datetime:
          type: string
          format: date-time
        monthNumber:
          type: integer
          format: int32
        nanosecond:
          type: integer
          format: int32
      required:
      - date
      - dayOfMonth
      - dayOfWeek
      - dayOfYear
      - hour
      - minute
      - month
      - monthNumber
      - nanosecond
      - second
      - time
      - value$kotlinx_datetime
      - year
    LocalTime:
      type: object
      properties:
        value:
          type: string
          writeOnly: true
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        value$kotlinx_datetime:
          type: string
        nanosecond:
          type: integer
          format: int32
      required:
      - hour
      - minute
      - nanosecond
      - second
      - value$kotlinx_datetime
    PersonConsignorView:
      allOf:
      - $ref: "#/components/schemas/ConsignorView"
    WeightTicketDetailView:
      type: object
      properties:
        id:
          type: integer
          format: int64
        consignorParty:
          oneOf:
          - $ref: "#/components/schemas/CompanyConsignorView"
          - $ref: "#/components/schemas/PersonConsignorView"
        status:
          type: string
        lines:
          type: array
          items:
            $ref: "#/components/schemas/WeightTicketLineView"
        carrierParty:
          $ref: "#/components/schemas/CompanyView"
        truckLicensePlate:
          type: string
        reclamation:
          type: string
        note:
          type: string
        createdAt:
          $ref: "#/components/schemas/LocalDateTime"
        updatedAt:
          $ref: "#/components/schemas/LocalDateTime"
        weightedAt:
          $ref: "#/components/schemas/LocalDateTime"
      required:
      - consignorParty
      - createdAt
      - id
      - lines
      - status
    WeightTicketLineView:
      type: object
      properties:
        wasteStreamNumber:
          type: string
        weightValue:
          type: number
        weightUnit:
          type: string
      required:
      - wasteStreamNumber
      - weightUnit
      - weightValue
    WasteStreamListView:
      type: object
      properties:
        wasteStreamNumber:
          type: string
        wasteName:
          type: string
        euralCode:
          type: string
        processingMethodCode:
          type: string
        consignorPartyName:
          type: string
        consignorPartyId:
          type: string
          format: uuid
        pickupLocation:
          type: string
        deliveryLocation:
          type: string
        status:
          type: string
        lastActivityAt:
          $ref: "#/components/schemas/LocalDateTime"
      required:
      - consignorPartyId
      - consignorPartyName
      - deliveryLocation
      - euralCode
      - lastActivityAt
      - pickupLocation
      - processingMethodCode
      - status
      - wasteName
      - wasteStreamNumber
    DeliveryLocationView:
      type: object
      properties:
        processorPartyId:
          type: string
        processor:
          $ref: "#/components/schemas/CompanyView"
      required:
      - processorPartyId
    DutchAddressView:
      allOf:
      - $ref: "#/components/schemas/PickupLocationView"
      - type: object
        properties:
          streetName:
            type: string
          postalCode:
            type: string
          buildingNumber:
            type: string
          buildingNumberAddition:
            type: string
          city:
            type: string
          country:
            type: string
      required:
      - buildingNumber
      - city
      - country
      - postalCode
      - streetName
    EuralCodeView:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
    NoPickupView:
      allOf:
      - $ref: "#/components/schemas/PickupLocationView"
    PickupCompanyView:
      allOf:
      - $ref: "#/components/schemas/PickupLocationView"
      - type: object
        properties:
          company:
            $ref: "#/components/schemas/CompanyView"
      required:
      - company
    PickupLocationView:
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
      required:
      - type
    ProcessingMethodView:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
    ProjectLocationView:
      allOf:
      - $ref: "#/components/schemas/PickupLocationView"
      - type: object
        properties:
          company:
            $ref: "#/components/schemas/CompanyView"
          streetName:
            type: string
          postalCode:
            type: string
          buildingNumber:
            type: string
          buildingNumberAddition:
            type: string
          city:
            type: string
          country:
            type: string
      required:
      - buildingNumber
      - city
      - company
      - country
      - postalCode
      - streetName
    ProximityDescriptionView:
      allOf:
      - $ref: "#/components/schemas/PickupLocationView"
      - type: object
        properties:
          postalCodeDigits:
            type: string
          city:
            type: string
          description:
            type: string
          country:
            type: string
      required:
      - city
      - country
      - description
      - postalCodeDigits
    WasteStreamDetailView:
      type: object
      properties:
        wasteStreamNumber:
          type: string
        wasteType:
          $ref: "#/components/schemas/WasteTypeView"
        collectionType:
          type: string
        pickupLocation:
          oneOf:
          - $ref: "#/components/schemas/DutchAddressView"
          - $ref: "#/components/schemas/NoPickupView"
          - $ref: "#/components/schemas/PickupCompanyView"
          - $ref: "#/components/schemas/ProjectLocationView"
          - $ref: "#/components/schemas/ProximityDescriptionView"
        deliveryLocation:
          $ref: "#/components/schemas/DeliveryLocationView"
        consignorParty:
          oneOf:
          - $ref: "#/components/schemas/CompanyConsignorView"
          - $ref: "#/components/schemas/PersonConsignorView"
        pickupParty:
          $ref: "#/components/schemas/CompanyView"
        dealerParty:
          $ref: "#/components/schemas/CompanyView"
        collectorParty:
          $ref: "#/components/schemas/CompanyView"
        brokerParty:
          $ref: "#/components/schemas/CompanyView"
        status:
          type: string
        lastActivityAt:
          $ref: "#/components/schemas/LocalDateTime"
      required:
      - collectionType
      - consignorParty
      - deliveryLocation
      - lastActivityAt
      - pickupParty
      - status
      - wasteStreamNumber
      - wasteType
    WasteTypeView:
      type: object
      properties:
        name:
          type: string
        euralCode:
          $ref: "#/components/schemas/EuralCodeView"
        processingMethod:
          $ref: "#/components/schemas/ProcessingMethodView"
      required:
      - euralCode
      - name
      - processingMethod
    UserResponse:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        lastSignInAt:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roles:
          type: array
          items:
            type: string
      required:
      - id
      - roles
    DriverView:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
      - id
      - name
    Instant:
      type: object
      properties:
        value:
          type: string
          format: date-time
          writeOnly: true
        value$kotlinx_datetime:
          type: string
          format: date-time
        nanosecondsOfSecond:
          type: integer
          format: int32
        epochSeconds:
          type: integer
          format: int64
      required:
      - epochSeconds
      - nanosecondsOfSecond
      - value$kotlinx_datetime
    TransportDetailView:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayNumber:
          type: string
        consignorParty:
          $ref: "#/components/schemas/CompanyView"
        carrierParty:
          $ref: "#/components/schemas/CompanyView"
        pickupLocation:
          oneOf:
          - $ref: "#/components/schemas/DutchAddressView"
          - $ref: "#/components/schemas/NoPickupView"
          - $ref: "#/components/schemas/PickupCompanyView"
          - $ref: "#/components/schemas/ProjectLocationView"
          - $ref: "#/components/schemas/ProximityDescriptionView"
        pickupDateTime:
          type: string
        deliveryLocation:
          oneOf:
          - $ref: "#/components/schemas/DutchAddressView"
          - $ref: "#/components/schemas/NoPickupView"
          - $ref: "#/components/schemas/PickupCompanyView"
          - $ref: "#/components/schemas/ProjectLocationView"
          - $ref: "#/components/schemas/ProximityDescriptionView"
        deliveryDateTime:
          type: string
        transportType:
          type: string
        status:
          type: string
          enum:
          - UNPLANNED
          - PLANNED
          - FINISHED
        truck:
          $ref: "#/components/schemas/TruckView"
        driver:
          $ref: "#/components/schemas/DriverView"
        note:
          type: string
        transportHours:
          type: number
          format: double
        sequenceNumber:
          type: integer
          format: int32
        updatedAt:
          $ref: "#/components/schemas/Instant"
        wasteContainer:
          $ref: "#/components/schemas/WasteContainerView"
        containerOperation:
          type: string
          enum:
          - EXCHANGE
          - PICKUP
          - EMPTY
          - DELIVERY
      required:
      - carrierParty
      - consignorParty
      - deliveryDateTime
      - deliveryLocation
      - id
      - note
      - pickupDateTime
      - pickupLocation
      - sequenceNumber
      - status
      - transportType
    TruckView:
      type: object
      properties:
        licensePlate:
          type: string
        brand:
          type: string
        model:
          type: string
      required:
      - brand
      - licensePlate
      - model
    DriverPlanningItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayNumber:
          type: string
        pickupDateTime:
          type: string
          format: date-time
        deliveryDateTime:
          type: string
          format: date-time
        pickupLocation:
          oneOf:
          - $ref: "#/components/schemas/DutchAddressView"
          - $ref: "#/components/schemas/NoPickupView"
          - $ref: "#/components/schemas/PickupCompanyView"
          - $ref: "#/components/schemas/ProjectLocationView"
          - $ref: "#/components/schemas/ProximityDescriptionView"
        deliveryLocation:
          oneOf:
          - $ref: "#/components/schemas/DutchAddressView"
          - $ref: "#/components/schemas/NoPickupView"
          - $ref: "#/components/schemas/PickupCompanyView"
          - $ref: "#/components/schemas/ProjectLocationView"
          - $ref: "#/components/schemas/ProximityDescriptionView"
        containerId:
          type: string
        status:
          type: string
          enum:
          - UNPLANNED
          - PLANNED
          - FINISHED
          - INVOICED
      required:
      - deliveryLocation
      - pickupDateTime
      - pickupLocation
      - status
    CompanyBranchResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        address:
          $ref: "#/components/schemas/AddressDto"
        companyId:
          type: string
          format: uuid
      required:
      - address
      - companyId
      - id
    CompanyResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        chamberOfCommerceId:
          type: string
        vihbId:
          type: string
        name:
          type: string
        address:
          $ref: "#/components/schemas/AddressDto"
        processorId:
          type: string
        updatedAt:
          type: string
          format: date-time
        branches:
          type: array
          items:
            $ref: "#/components/schemas/CompanyBranchResponse"
      required:
      - address
      - branches
      - id
      - name
      - updatedAt
  securitySchemes:
    bearerAuth:
      type: http
      name: Authorization
      in: header
      scheme: bearer
      bearerFormat: JWT
