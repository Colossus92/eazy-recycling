name: Build Docker Image and Deploy to DO App Platform

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            build_required:
              - 'apps/springboot-backend/src/**'
              - 'apps/springboot-backend/.dockerignore'
              - 'apps/springboot-backend/Dockerfile'
              - 'apps/springboot-backend/build.gradle.kts'
              - 'libs/eba-schema/**'
              - 'nx.json'
              - 'package.json'
              - '.github/workflows/docker-build.yml'

      # Set up Node.js for Nx
      - name: Setup Node.js
        uses: actions/setup-node@v4
        if: steps.changes.outputs.build_required == 'true'
        with:
          node-version: '22'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        if: steps.changes.outputs.build_required == 'true'
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      # Install dependencies and setup Nx
      - name: Install dependencies
        if: steps.changes.outputs.build_required == 'true'
        run: npm ci

      # Build using Nx (this will handle Gradle builds and Docker image creation)
      - name: Build with Nx
        if: steps.changes.outputs.build_required == 'true'
        run: npx nx docker:build springboot-backend

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226
        if: steps.changes.outputs.build_required == 'true'

      - name: Log in to the Container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        if: steps.changes.outputs.build_required == 'true'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        if: steps.changes.outputs.build_required == 'true'
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"

      # Tag and push the image built by Nx
      - name: Tag and push Docker image
        if: steps.changes.outputs.build_required == 'true'
        run: |
          # Tag the image built by Nx with the GitHub Container Registry tags
          for tag in ${{ steps.meta.outputs.tags }}; do
            docker tag apps-springboot-backend $tag
            docker push $tag
          done

      - name: Deploy the app
        uses: digitalocean/app_action/deploy@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
