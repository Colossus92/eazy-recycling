package nl.eazysoftware.eazyrecyclingservice.controller.transport

import nl.eazysoftware.eazyrecyclingservice.repository.entity.transport.TransportType
import java.time.LocalDateTime
import java.util.UUID

data class CreateWasteTransportRequest(
    val consigneePartyId: String,
    val pickupPartyId: String,
    override val consignorPartyId: UUID,
    override val pickupDateTime: LocalDateTime,
    override val deliveryDateTime: LocalDateTime,
    override val transportType: TransportType,
    override val driverId: UUID?,
    override val carrierPartyId: UUID,
    override val pickupCompanyId: UUID?,
    override val pickupStreet: String,
    override val pickupBuildingNumber: String,
    override val pickupPostalCode: String,
    override val pickupCity: String,
    override val deliveryCompanyId: UUID?,
    override val deliveryStreet: String,
    override val deliveryBuildingNumber: String,
    override val deliveryPostalCode: String,
    override val deliveryCity: String,
    override val truckId: String?,
    override val containerId: UUID?,
    val wasteStreamNumber: String,
    val weight: Int,
    val unit: String,
    val quantity: Int,
    val goodsName: String,
    val euralCode: String,
    val note: String,
): CreateContainerTransportRequest( // Waste transport is also a container transport
    consignorPartyId = consignorPartyId,
    pickupDateTime = pickupDateTime,
    deliveryDateTime = deliveryDateTime,
    transportType = transportType,
    driverId = driverId,
    carrierPartyId = carrierPartyId,
    pickupCompanyId = pickupCompanyId,
    pickupStreet = pickupStreet,
    pickupBuildingNumber = pickupBuildingNumber,
    pickupPostalCode = pickupPostalCode,
    pickupCity = pickupCity,
    deliveryCompanyId = deliveryCompanyId,
    deliveryStreet = deliveryStreet,
    deliveryBuildingNumber = deliveryBuildingNumber,
    deliveryPostalCode = deliveryPostalCode,
    deliveryCity = deliveryCity,
    truckId = truckId,
    containerId = containerId,
)