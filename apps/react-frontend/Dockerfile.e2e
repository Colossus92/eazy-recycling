# Multi-stage build for React frontend e2e testing
FROM node:21-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy package files from frontend
COPY package.json ./

# Install all dependencies (including dev dependencies for build)
# Note: Using npm install instead of npm ci because this is a workspace package
# without its own package-lock.json (lock file is at monorepo root)
RUN npm install --legacy-peer-deps && npm cache clean --force

# Build stage
FROM base AS builder
WORKDIR /app

# Copy dependencies
COPY --from=deps /app/node_modules ./node_modules

# Copy source code
COPY . .

# Set environment variables for e2e testing
ENV VITE_API_URL=http://localhost:8081
ENV NODE_ENV=production

# Build the application without running tests
RUN npx vite build

# Production stage
FROM nginx:alpine AS runner

# Copy built application
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy custom nginx config for SPA routing
RUN echo 'server { \
    listen 80; \
    server_name localhost; \
    root /usr/share/nginx/html; \
    index index.html; \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    location /api { \
        resolver 127.0.0.11 valid=30s; \
        set $backend localhost:8081; \
        proxy_pass http://$backend; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
